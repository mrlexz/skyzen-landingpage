<krpano prev_thumb="1">
  <style name="toolstip_default"
		onhover="	
		   			set(layer[thumb_tooltip_container].visible,true);
		   			copy(layer[thumb_tooltip_container].parent,name);
		   			copy(layer[thumb_tooltip].url,layer[get(name)].url);
		   			if(language == 'vi',
		   				set(layer[text_thumb].html,get(layer[get(name)].title_thumb_vi));
		   				,
				language == 'en',
		   				set(layer[text_thumb].html,get(layer[get(name)].title_thumb_en));
				,
				
	   				);
		   			
		   			
		   			"
		   onout="
		   			set(layer[thumb_tooltip_container].visible,false);	
		   			"
		
	/>
	
  <layer name="thumb_tooltip_container"  keep="true"
       type="container" width="220" height="150" visible="false" parent="STAGE" enabled="false"
       maskchildren="true" zorder="99" align="lefttop" x="-240"
       bgcolor="calc:skin_settings.design_bgcolor" bgroundedge="10"
       bgalpha="calc:skin_settings.design_bgalpha" >
    <layer name="text_thumb" url="%SWFPATH%/plugins/textfield.swf"
	   		  align="centertop"  x="0" y="5" 
	    	  width="100%" autoheight="true"
	    	  backgroundcolor="0x0071a6" backgroundalpha="0"
	    	  roundedge="3"
	    	  vcenter="true" padding="8"
	    	  css="calc:skin_settings.design_text_css + 'font-weight:bold; text-align:center; font-size:14px;'"
	    />
    <layer name="line_tooltip_thumb" url="%SWFPATH%/module/thumb/core/line.png" width="245" align="top"  y="40"/>
	
	  <layer name="thumb_tooltip"
				 align="centerbottom"
			 bgroundedge="10"
		   		  x="0" y="5"
		    	  width="215" height="100"
		    /> 
  </layer>
	
  <layer name="skin_thumbs_container"  keep="true" parent="root_layer" type="container" align="righttop" width="377" x="5" y="-50"  height="70%" bgcolor="get:skin_settings.design_bgcolor" bgalpha="0" visible="false">
  
    <layer name="skin_thumbs" state="closed" url.flash="%SWFPATH%/plugins/scrollarea.swf" url.html5="%SWFPATH%/plugins/scrollarea.js" direction="v" align="top" x="90" width="100%" height="66" zorder="1" onloaded="" onscroll="skin_updatethumbscroll();" >
		
	  </layer>
  </layer>
  <style name="skin_thumbborder" type="container" keep="true" x="get:skin_settings.design_thumbborder_padding" y="get:skin_settings.design_thumbborder_padding" width="calc:skin_settings.thumbs_width - 2*skin_settings.design_thumbborder_padding" height="calc:skin_settings.thumbs_height - 2*skin_settings.design_thumbborder_padding" maskchildren="false" enabled="false" align="lefttop" bgborder="get:skin_settings.design_thumbborder_bgborder" bgroundedge="get:skin_settings.design_thumbborder_bgroundedge" />
  <action name="remove_thumb">
	  for(set(i,0), i LT 30, inc(i),
     txtadd(thumbnames,'skin_thumb_s',get(i));
	  
	  removelayer(get(thumbnames));
    );</action>
  <action name="skin_addthumbs">
	  remove_thumb();
    copy(thumbwidth, skin_settings.thumbs_width);
    copy(thumbheight, skin_settings.thumbs_height);
    copy(thumbpadding, skin_settings.thumbs_padding);
    
    add(thumbxoffset, thumbheight, thumbpadding);
    mul(thumbxcenter, thumbxoffset, 0.5);
    mul(thumbbarheight, thumbxoffset, menu_thum_%1.thumbs.count);
    add(thumbbarheight, 150);
    add(thumbbarwidth, thumbpadding, thumbheight);
    add(thumbbarwidth, thumbpadding);
    
    copy(layer[skin_thumbs].height, thumbbarheight);
    copy(layer[skin_thumbs].width, thumbbarwidth);
    
    mul(halfheight, thumbbarheight, 0.5);
    copy(layer[skin_thumbs_scrollleft].y, halfheight);
    copy(layer[skin_thumbs_scrollright].y, halfheight);
    
    set(thumb_cnt,0);
	  
    for(set(i,0), i LT menu_thum_%1.thumbs.count, inc(i),
    inc(thumb_cnt);
     txtadd(thumbname,'skin_thumb_s',get(i));
	  trace('xxxa: ',get(thumbname));
    addlayer(get(thumbname));
 ;
    txtadd(turl,'%SWFPATH%/projects/gigapixel/panos/',get(scene[get(menu_thum_%1.thumbs[get(i)].name)].name),'/thumb.jpg');
    set(layer[get(thumbname)].url,get(turl));
    
    set(layer[get(thumbname)].parent, 'skin_thumbs');
    set(layer[get(thumbname)].keep, true);
    set(layer[get(thumbname)].align, top);
    set(layer[get(thumbname)].bgroundedge,8);
    copy(layer[get(thumbname)].width, thumbwidth);
    copy(layer[get(thumbname)].height, thumbheight);
    copy(layer[get(thumbname)].group, thumb);
    
    mul(thumby, i, thumbxoffset);
    add(thumby, thumbpadding);
    
    add(thumbsx,20,thumbpadding);
    copy(layer[get(thumbname)].x, thumbsx);
    copy(layer[get(thumbname)].y, thumby);
    
    add(scn[get(i)].thumby, thumby, thumbxcenter);
    copy(scn[get(i)].thumbx, thumbpadding);
	  
    set(layer[get(thumbname)].linkedscene, get(scene[get(menu_thum_%1.thumbs[get(i)].name)].name) );
    set(layer[get(thumbname)].onclick, copy(layer[skin_thumbborder].parent, name); skin_loadscene(get(linkedscene),get(skin_settings.loadscene_blend));
						  ;);
	 
    
    set(layer[get(thumbname)].title_thumb_vi, get(scene[get(menu_thum_%1.thumbs[get(i)].name)].title) );
    set(layer[get(thumbname)].title_thumb_en, get(scene[get(menu_thum_%1.thumbs[get(i)].name)].titleen) );
    layer[get(thumbname)].loadstyle(toolstip_default);
    
    txtadd(thumbboder, 'skin_thumbboder_s', calc(get(i)+1));
    addlayer(get(thumbboder));
	 
    layer[get(thumbboder)].loadstyle(skin_thumbborder);
    set(layer[get(thumbboder)].parent, get(thumbname));
    
    );
    
    if(thumb_cnt == 1,
    set(layer[skin_thumbs].align, 'lefttop');
    );</action>
  <action name="skin_updatescroll">
	  if(layer[skin_thumbs].loaded,
    
    set(cursceneindex, 0);
    if(layer[scene].sname, copy(cursceneindex, scn[get(layer[scene].sname)].index));
    layer[skin_thumbs].setcenter(get(scn[get(cursceneindex)].thumbx), get(scn[get(cursceneindex)].thumby));
    );</action>
  <action name="skin_updatethumbscroll">
	  
	 copy(padding,skin_settings.thumbs_padding);
    if(skin_settings.thumbs_scrollbuttons,
    if(toverflow  GT 0, set(layer[skin_thumbs_scrollup].visible,true),  set(layer[skin_thumbs_scrollup].visible,false) );
    if(boverflow  GT 0, set(layer[skin_thumbs_scrolldown].visible,true), set(layer[skin_thumbs_scrolldown].visible,false) );
    );
    if(skin_settings.thumbs_scrollindicator,
    if(hoverflow GT 0,
    set(layer[skin_thumbs_scrollindicator].visible,true);
    set(layer[scroll_bar].visible,true);
    sub(iw,pixelheight,hoverflow);
    div(pw,iw,pixelheight);
    div(px,toverflow,hoverflow);
    mul(pw,iw);
    copy(layer[skin_thumbs_scrollindicator].height,pw);
    sub(iw,pw);
    sub(iw,padding);
    mul(px,iw);
    add(px,padding);
    copy(layer[skin_thumbs_scrollindicator].y,px);
    ,
    set(layer[skin_thumbs_scrollindicator].visible,false);
    set(layer[scroll_bar].visible,false);
    );
    );</action>
  <action name="skin_showthumbs">
	  if(%1 == null, if(layer[skin_thumbs].state == 'closed', set(show,true), set(show,false)); , set(show,%1); );
    mul(mh, layer[skin_scroll_layer].pixelheight, -1);
    if(show,
    set(layer[skin_thumbs].state, 'opened');
    tween(layer[skin_thumbs].alpha, 1.0, 0.25);
    add(mh, layer[skin_thumbs].height);
    add(mh, layer[skin_scroll_layer].y_offset);
    tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);
    set(layer[skin_thumbs_container].visible, true);
    tween(layer[skin_thumbs_container].alpha, 1.0, 0.25);
    tween(layer[skin_map].alpha, 0.0, 0.25, default, set(layer[skin_map].visible,false));
    ,
    set(layer[skin_thumbs].state, 'closed');
    tween(layer[skin_thumbs].alpha, 0.0, 0.25, easeOutQuint);
    add(mh, layer[skin_scroll_layer].y_offset);
    tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint, set(layer[skin_thumbs_container].visible, false););
    );</action>
	
	<action name="active_menu">
		
    layer[skin_thumbs].scrolltocenter(0,%1);
	</action>
	<action name="active_menu_s">
	txtadd(xborder, 'skin_thumb_', get(scene[get(xml.scene)].name));	
    layer[skin_thumbs].scrolltocenter(0,get(layer[get(xborder)].y));
			
	</action>
	
  <events name="update_thumb_menu" keep="true"
            onxmlcomplete="
       	     set(layer[skin_thumbborder_active].visible,false);
               if(scene[get(xml.scene)].menu_thumb,

               		skin_addthumbs(get(scene[get(xml.scene)].menu_thumb));
                    set(layer[skin_thumbs_container].visible,true);
                    ,
                    set(layer[skin_thumbs_container].visible,false);
                );
               "

            onloadcomplete="
							
                   if(scene[get(xml.scene)].menu_thumb,
                    if(prev_thumb == scene[get(xml.scene)].menu_thumb,,remove_thumb(); 						   skin_addthumbs(get(scene[get(xml.scene)].menu_thumb)););
                   );
                   copy(prev_thumb, scene[get(xml.scene)].menu_thumb);
                  
    		"
		  
		  
    	  onresize="set(layer[skin_thumbs_container].y,100);"
		  onmousedown="
					 if(layer[bgsound_bt].crop == '0|192|64|64',js(playAudio()),js(pauseAudio)); 
					  
					 
					 "
		  ondoubleclick="if(layer[skin_thumbs_container].x==5,tween(layer[skin_thumbs_container].x,-260);,tween(layer[skin_thumbs_container].x,5);)"
    />
	if(layer[get(parentname)],
						set(layer[skin_thumbborder_active].parent, get(parentname));
						set(layer[skin_thumbborder_active].visible, true);
					  ,
						set(layer[skin_thumbborder_active].visible, false);
					  );
	
</krpano>
