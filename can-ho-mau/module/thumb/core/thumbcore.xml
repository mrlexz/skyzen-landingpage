<krpano prev_thumb="skin_thumbboder_s1">
  <style name="toolstip_default"
		onhover="	
		   			set(layer[thumb_tooltip_container].visible,true);
		   			copy(layer[thumb_tooltip_container].parent,name);
		   			copy(layer[thumb_tooltip].url,layer[get(name)].url);
		   			if(language == 'vi',
		   				set(layer[text_thumb].html,get(layer[get(name)].title_thumb_vi));
		   				,
				language == 'en',
		   				set(layer[text_thumb].html,get(layer[get(name)].title_thumb_en));
				,
				
	   				);
		   			
		   			
		   			"
		   onout="
		   			set(layer[thumb_tooltip_container].visible,false);	
		   			"
		
	/>
	<style name="text_thumbs" url="%SWFPATH%/plugins/textfield.swf" x="0" y="0" 
	    	  width="100%" autoheight="true" align="top"
	    	  backgroundcolor="0x0071a6" bgalpha="0" html="" padding="2 10 2 5"
		   		css="color: white;font-weight: bold;font-size:11px;text-align:center;"
	    	 
	    />
   
	
  <layer name="thumb_tooltip_container"  keep="true"
       type="container" width="220" height="120" visible="false" parent="STAGE" enabled="false"
       maskchildren="false" zorder="99" align="lefttop" x="-220"
       bgcolor="calc:skin_settings.design_bgcolor" bgroundedge="10"
       bgalpha="0" >
    <layer name="text_thumb" url="%SWFPATH%/plugins/textfield.swf"
	   		  align="center"  x="0" y="-15" 
	    	  width="100%" autoheight="true"
	    	  backgroundcolor="0x0071a6" bgalpha="0"
	    	  roundedge="3"
	    	  vcenter="true" padding="8"
	    	  css="calc:skin_settings.design_text_css+'font-size:14px' "
	    />
   
	
  </layer>
	
  <layer name="skin_thumbs_container"  keep="true" parent="root_layer" type="container" align="bottomcenter" width="50%" width.mobile="100%" x="0" y="-5000"  height="150" bgcolor="get:skin_settings.design_bgcolor" bgalpha="0.8 " bgroundedge="get:skin_settings.design_thumbborder_bgroundedge" visible="false" maskchildren="false">
	 	<layer name="skin_thumb_close"  url="%SWFPATH%/skin/skin_phone/images/close_thumb.png"  align="righttop" x="5" y="-35" scale="0.8" onhover="tween(y,-38,.1);" onout="tween(y,-35,.1);" zorder="2" ondown="tween(layer[skin_thumbs_container].y,-500,.2);" /> 
	 
	  <layer name="arrow_left" url="%SWFPATH%/skin/skin_phone/images/back.png" align="left"  scale="0.6" zorder="2" alpha="0.3" onover="tween(alpha,1);" onout="tween(alpha,0.3);" ondown="onover(); asyncloop(pressed, layer[skin_thumbs].scrollby(+2,0));" onup="onout();"/>
<layer name="arrow_right" url="%SWFPATH%/skin/skin_phone/images/next.png"  align="right" scale="0.6" zorder="2" alpha="0.3" onover="tween(alpha,1);" onout="tween(alpha,0.3);" ondown="onover(); asyncloop(pressed, layer[skin_thumbs].scrollby(-2,0));" onup="onout();"/>
  <layer name="skin_thumbs_container_tong"  keep="true"  type="container" align="top" width="92%" x="0" y="0"  height="100%" height.mobile="100%" bgcolor="get:skin_settings.design_bgcolor" bgalpha="0.0" visible="true">
  
    <layer name="skin_thumbs" state="closed" url.flash="%SWFPATH%/plugins/scrollarea.swf" url.html5="%SWFPATH%/plugins/scrollarea.js" direction="h" align="lefttop" x="0" y="15" width="300" height="100%" zorder="1" onloaded="skin_updatescroll()" onscroll="skin_updatethumbscroll();" >
		
	  </layer>
  </layer>
  </layer>
  <style name="skin_thumbborder" type="container" keep="true" x="get:skin_settings.design_thumbborder_padding" y="get:skin_settings.design_thumbborder_padding" width="calc:skin_settings.thumbs_width - 2*skin_settings.design_thumbborder_padding" height="calc:skin_settings.thumbs_height - 2*skin_settings.design_thumbborder_padding" maskchildren="false" enabled="false" align="lefttop" bgborder="get:skin_settings.design_thumbborder_bgborder" bgroundedge="get:skin_settings.design_thumbborder_bgroundedge" />
<action name="hit"> tween(scale, 0.9, 0.1, default, tween(scale, 1.0, 0.1, easeOutBounce)); </action>	
  <action name="remove_thumb">
	  for(set(i,0), i LT 30, inc(i),
     txtadd(thumbnames,'skin_thumb_s',get(i));
     txtadd(thumbnamess,'skin_thumb_s',get(i),'_border');
	  txtadd(textx,'skin_text_s',get(i)); 
	  removelayer(get(thumbnames));
	  removelayer(get(thumbnamess));
	  removelayer(get(textx));
    );</action>
  <action name="skin_addthumbs">
	remove_thumb();
    copy(thumbwidth, skin_settings.thumbs_width);
    copy(thumbheight, skin_settings.thumbs_height);
    copy(thumbpadding, skin_settings.thumbs_padding);
    
    add(thumbxoffset, thumbheight, thumbpadding);
    mul(thumbxcenter, thumbxoffset, 0.5);
    mul(thumbbarheight, thumbxoffset, menu_thum_%1.thumbs.count);
    add(thumbbarheight, 150);
    add(thumbbarwidth, thumbpadding, thumbheight);
    add(thumbbarwidth, thumbpadding);
    
    copy(layer[skin_thumbs].height, thumbbarheight);
    copy(layer[skin_thumbs].width, 100%);
    
    mul(halfheight, thumbbarheight, 0.5);
    copy(layer[skin_thumbs_scrollleft].y, halfheight);
    copy(layer[skin_thumbs_scrollright].y, halfheight);
    
    set(thumb_cnt,0);
	  
    for(set(i,0), i LT menu_thum_%1.thumbs.count, inc(i),
    inc(thumb_cnt);
     txtadd(thumbname,'skin_thumb_s',get(i));
     txtadd(textthumb,'skin_text_s',get(i));
    addlayer(get(thumbname));
	  
  
	  
	txtadd(turl,'%SWFPATH%/projects/gigapixel/panos/',get(scene[get(menu_thum_%1.thumbs[get(i)].name)].name),'/thumb.jpg');
    set(layer[get(thumbname)].url,get(turl));
    
    set(layer[get(thumbname)].parent, 'skin_thumbs');
    set(layer[get(thumbname)].keep, true);
    set(layer[get(thumbname)].align, lefttop);
    set(layer[get(thumbname)].bgroundedge,8);
    copy(layer[get(thumbname)].width, thumbwidth);
    copy(layer[get(thumbname)].height, thumbheight);
    copy(layer[get(thumbname)].group, thumb);
    
    mul(thumby, i, thumbxoffset);
    add(thumby, thumbpadding);
   
    add(thumbsx,10,thumbpadding);
	
	 set(xx,calc(i*180+20)); 
	  
    set(layer[get(thumbname)].y, 0);
    copy(layer[get(thumbname)].x,xx);
	addlayer(get(textthumb));
    set(layer[get(textthumb)].keep, true);
	
    layer[get(textthumb)].loadstyle(text_thumbs); 
	  
	txtadd(txt_t,calc(i+1),'. ',get(scene[get(menu_thum_%1.thumbs[get(i)].name)].title));  
    set(layer[get(textthumb)].html,get(txt_t));  
    set(layer[get(textthumb)].zorder, 3);  
	set(cxx,calc(i*200-590));  
	set(layer[get(textthumb)].y,90);
    copy(layer[get(textthumb)].x, 0);   
	  
	  
	  

 	set(layer[get(textthumb)].parent, get(thumbname));  
	  
    set(layer[get(textthumb)].align, lefttop);
    
    add(scn[get(i)].thumby, thumby, thumbxcenter);
    copy(scn[get(i)].thumbx, thumbpadding);
	  	
	
    set(layer[get(thumbname)].linkedscene, get(scene[get(menu_thum_%1.thumbs[get(i)].name)].name) );
    set(layer[get(thumbname)].onhover, tween(y, -5, 0.1, default, tween(scale, 1.0, 0.1, easeOutBounce)); );
    set(layer[get(thumbname)].onout, tween(y, 0, 0.1, default, tween(scale, 1.0, 0.1, easeOutBounce)); );
	  
	  
    set(layer[get(thumbname)].onclick,hit(); copy(layer[skin_thumbborder].parent, name);looktohotspot(get(linkedscene), 25, smooth(100,50,500)); delayedcall(1.0,skin_loadscene(get(linkedscene),get(skin_settings.loadscene_blend));); 
					tween(layer[skin_thumbs_container].y,-5000,.8);	  ;);
	 
    
    set(layer[get(thumbname)].title_thumb_vi, get(scene[get(menu_thum_%1.thumbs[get(i)].name)].title) );
	  
    set(layer[get(thumbname)].title_thumb_en, get(scene[get(menu_thum_%1.thumbs[get(i)].name)].titleen) );
	  
    
    txtadd(thumbboder, 'skin_thumb_s', get(i),'_border');
    addlayer(get(thumbboder));
	
    layer[get(thumbboder)].loadstyle(skin_thumbborder);
    set(layer[get(thumbboder)].parent, get(thumbname));
    );
     set(layer[skin_thumbs].width, calc(200*i+100));
    if(thumb_cnt == 1,
    set(layer[skin_thumbs].align, 'left');
   
    );</action>
  <action name="skin_updatescroll">
	  if(layer[skin_thumbs].loaded,
    
    if(layer[scene].sname, copy(cursceneindex, scn[get(layer[scene].sname)].index));
    layer[skin_thumbs].setcenter(0, 0);
    );</action>
  <action name="skin_updatethumbscroll">
	  
	 copy(padding,skin_settings.thumbs_padding);
    if(skin_settings.thumbs_scrollbuttons,
    if(toverflow  GT 0, set(layer[skin_thumbs_scrollup].visible,true),  set(layer[skin_thumbs_scrollup].visible,false) );
    if(boverflow  GT 0, set(layer[skin_thumbs_scrolldown].visible,true), set(layer[skin_thumbs_scrolldown].visible,false) );
    );
    if(skin_settings.thumbs_scrollindicator,
    if(hoverflow GT 0,
    set(layer[skin_thumbs_scrollindicator].visible,true);
    set(layer[scroll_bar].visible,true);
    sub(iw,pixelheight,hoverflow);
    div(pw,iw,pixelheight);
    div(px,toverflow,hoverflow);
    mul(pw,iw);
    copy(layer[skin_thumbs_scrollindicator].height,pw);
    sub(iw,pw);
    sub(iw,padding);
    mul(px,iw);
    add(px,padding);
    copy(layer[skin_thumbs_scrollindicator].y,px);
    ,
    set(layer[skin_thumbs_scrollindicator].visible,false);
    set(layer[scroll_bar].visible,false);
    );
    );</action>
  <action name="skin_showthumbs">
	  if(%1 == null, if(layer[skin_thumbs].state == 'closed', set(show,true), set(show,false)); , set(show,%1); );
    mul(mh, layer[skin_scroll_layer].pixelheight, -1);
    if(show,
    set(layer[skin_thumbs].state, 'opened');
    tween(layer[skin_thumbs].alpha, 1.0, 0.25);
    add(mh, layer[skin_thumbs].height);
    add(mh, layer[skin_scroll_layer].y_offset);
    tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);
    set(layer[skin_thumbs_container].visible, true);
    tween(layer[skin_thumbs_container].alpha, 1.0, 0.25);
    tween(layer[skin_map].alpha, 0.0, 0.25, default, set(layer[skin_map].visible,false));
    ,
    set(layer[skin_thumbs].state, 'closed');
    tween(layer[skin_thumbs].alpha, 0.0, 0.25, easeOutQuint);
    add(mh, layer[skin_scroll_layer].y_offset);
    tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint, set(layer[skin_thumbs_container].visible, false););
    );</action>
	
	<action name="active_menu">
		
    layer[skin_thumbs].scrolltocenter(0,get(layer[get(name)].y));
	</action>
	<action name="active_menu_s">
		set(xborder,);
	txtadd(xborder, 'skin_thumb_s',get(scene[get(xml.scene)].poss_thumb));
	txtadd(xborders, 'skin_thumb_s',get(scene[get(xml.scene)].poss_thumb),'_border');
	
		set(numb,get(layer[get(xborder)].y));
		
    layer[skin_thumbs].scrolltocenter(0,calc(numb+80));
		
	set(layer[get(xborders)].bgborder,'2 0x00ff00 1');		
	</action>
	
  <events name="update_thumb_menu" keep="true"
            onxmlcomplete="
               if(scene[get(xml.scene)].menu_thumb,

                    set(layer[skin_thumbs_container].visible,true);
                    ,
                    set(layer[skin_thumbs_container].visible,false);
                );
						  
					   
               "

            onloadcomplete="
					active_menu_s();
                   if(scene[get(xml.scene)].menu_thumb,
                    if(prev_thumb == scene[get(xml.scene)].menu_thumb,,remove_thumb(); 						  
					skin_addthumbs(get(scene[get(xml.scene)].menu_thumb)););
                   );
                   copy(prev_thumb, scene[get(xml.scene)].menu_thumb);
                  
    		"
		  
		  
    	  onresize=""
		  onmousedown="close_menu(); closegallery();
					 if(layer[bgsound_bt].crop == '0|192|64|64',js(playAudio()),js(pauseAudio)); 
					  
					 
					 "
		 
    />
	if(layer[get(parentname)],
						set(layer[skin_thumbborder_active].parent, get(parentname));
						set(layer[skin_thumbborder_active].visible, true);
					  ,
						set(layer[skin_thumbborder_active].visible, false);
					  );
	
</krpano>
